// –¢–µ—Å—Ç —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown
const {
  escapeUserInput,
  safeMarkdown,
} = require('./dist/src/utils/format.utils.js');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ Markdown...\n');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
const testData = [
  'telegram_payments',
  'user_name_with_underscores',
  'plan*with*asterisks',
  'plan[with]brackets',
  'plan(with)parentheses',
  'plan{with}braces',
  'plan.with.dots',
  'plan-with-dashes',
  'plan+with+plus',
  'plan=with=equals',
  'plan|with|pipes',
  'plan~with~tildes',
  'plan`with`backticks',
  'plan>with>greater',
  'plan#with#hash',
  'plan!with!exclamation',
];

console.log('üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º escapeUserInput:');
console.log('‚îÄ'.repeat(50));

testData.forEach((text) => {
  const escaped = escapeUserInput(text);
  console.log(`–ò—Å—Ö–æ–¥–Ω—ã–π: "${text}"`);
  console.log(`–≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: "${escaped}"`);
  console.log();
});

console.log('üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º safeMarkdown:');
console.log('‚îÄ'.repeat(50));

const systemMessage = `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –ú–µ—Ç–æ–¥: telegram_payments
‚Ä¢ –ü–ª–∞–Ω: premium_plan
‚Ä¢ –°—Ç–∞—Ç—É—Å: completed
*–≠—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ*`;

console.log('–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:');
console.log(systemMessage);
console.log('\n–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ safeMarkdown:');
console.log(safeMarkdown(systemMessage));

console.log('\nüí° –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
const correctUsage = `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*
‚Ä¢ –ú–µ—Ç–æ–¥: ${escapeUserInput('telegram_payments')}
‚Ä¢ –ü–ª–∞–Ω: ${escapeUserInput('premium_plan')}
‚Ä¢ –°—Ç–∞—Ç—É—Å: ${escapeUserInput('completed')}
*–≠—Ç–æ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ*`;

console.log(correctUsage);
